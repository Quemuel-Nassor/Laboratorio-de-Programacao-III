/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gerenciador_de_petshop;

import com.google.gson.Gson;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author 828461
 */
public class FormCadastrarAtendimento extends javax.swing.JFrame {
    //lista de atendimentos
    List<Atendimento> atendimentos = new ArrayList();
    List<Cliente> clientes = new ArrayList();
    float total = 0;
    /**
     * Creates new form FormCadastrar
     */
    public FormCadastrarAtendimento() {
        initComponents();
        
        //leitura do arquivo Json que armazena os atendimentos dos clientes
        try {
            JsonReader reader = new JsonReader(new FileReader(System.getProperty("user.home") + "\\Desktop\\Atendimentos.json"));
            
            reader.beginArray();
            while(reader.hasNext()){
                Atendimento atd = new Gson().fromJson(reader,Atendimento.class);
                atendimentos.add(atd);
                //System.out.println(atd.getCliente()+atd.getData()+atd.getCategoria()+atd.getValor());
            }
        } catch (Exception e) {
            System.out.println("ERRO: "+e.getMessage());
        }
        
        //leitura do arquivo json que armazena os cadastros dos clientes
        try {
            JsonReader reader = new JsonReader(new FileReader(System.getProperty("user.home") + "\\Desktop\\Clientes.json"));
            
            reader.beginArray();
            while(reader.hasNext()){
                Cliente cli = new Gson().fromJson(reader,Cliente.class);
                clientes.add(cli);
            }
        } catch (Exception e) {
            System.out.println("ERRO: "+e.getMessage());
        }
        
        //preenchimento dos campos
        preencherComboCategoria();
        preencherComboCliente();
        configurarAtendimento();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSelCliente = new javax.swing.JLabel();
        cbxCategoria = new javax.swing.JComboBox<>();
        lblCategoria = new javax.swing.JLabel();
        lblVlrTotal = new javax.swing.JLabel();
        txtVlrTotal = new javax.swing.JTextField();
        lblDataAtendimento = new javax.swing.JLabel();
        lblServicos = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JToggleButton();
        chkMedicacao = new javax.swing.JCheckBox();
        chkBrinquedos = new javax.swing.JCheckBox();
        chkBanho = new javax.swing.JCheckBox();
        chkTosa = new javax.swing.JCheckBox();
        txtData = new javax.swing.JFormattedTextField();
        cbxCliente = new javax.swing.JComboBox<>();
        btnCalcular = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblSelCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSelCliente.setText("Cliente");

        cbxCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCategoria.setText("Categoria");

        lblVlrTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblVlrTotal.setText("Valor total");

        txtVlrTotal.setEditable(false);
        txtVlrTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblDataAtendimento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDataAtendimento.setText("Data");

        lblServicos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblServicos.setText("Serviços");

        btnSalvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSalvar.setText("salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        chkMedicacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkMedicacao.setText("Medicação");

        chkBrinquedos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkBrinquedos.setText("Brinquedos");

        chkBanho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkBanho.setText("Banho");

        chkTosa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkTosa.setText("Tosa");

        txtData.setEditable(false);
        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtData.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbxCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbxCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnCalcular.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCalcular.setText("calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCategoria)
                            .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDataAtendimento)
                            .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cbxCliente, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblServicos, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkMedicacao)
                                    .addComponent(chkBrinquedos)
                                    .addComponent(chkTosa))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(chkBanho)
                                    .addGap(28, 28, 28)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(btnCalcular)
                                .addGap(18, 18, 18)
                                .addComponent(btnSalvar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtVlrTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblVlrTotal))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lblSelCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblServicos)
                            .addComponent(lblDataAtendimento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkBanho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkTosa))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkMedicacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkBrinquedos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCalcular)
                            .addComponent(btnSalvar)
                            .addComponent(txtVlrTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblVlrTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        int flag = 0;
        calcular();
        Atendimento novo = new Atendimento(cbxCliente.getSelectedItem().toString(),txtData.getText(),cbxCategoria.getSelectedItem().toString(),Double.parseDouble(txtVlrTotal.getText()));
        
        if(atendimentos.isEmpty()){
                flag = 1;
        }
        
        for(Atendimento atd : atendimentos){
            flag = 0;
            if(novo.getCliente().equals(atd.getCliente()) && novo.getData().equals(atd.getData()) && novo.getCategoria().equals(atd.getCategoria())&& novo.getValor() == atd.getValor()){
                JOptionPane.showMessageDialog(null,"Verifique as informações do atendimento","Atendimento já registrado!", JOptionPane.INFORMATION_MESSAGE);
                cbxCliente.setSelectedItem(0);
                txtData.setText("");
                cbxCategoria.setSelectedItem(0);
                txtVlrTotal.setText("");
                break;
            }else{
                flag = 1;
            }
        }
        if(flag == 1){
            //teste
            System.out.println(novo.getCliente()+","+novo.getData()+","+novo.getCategoria()+","+novo.getValor());
            atendimentos.add(novo);
            cbxCliente.setSelectedItem(0);
            txtData.setText("");
            cbxCategoria.setSelectedItem(0);
            txtVlrTotal.setText("");
        }
        //gravando no arquivo Json que armazena os atendimentos dos clientes
        try{
            JsonWriter writer = new JsonWriter(new FileWriter(System.getProperty("user.home") + "\\Desktop\\Atendimentos.json"));
            
            writer.beginArray();
            for (Atendimento atdm: atendimentos) {
                System.out.println("saída para o arquivo"+atdm.toString());
                new Gson().toJson(atdm,Atendimento.class,writer);
            }
            writer.endArray();
            writer.close();
            
        }catch(Exception e){
            System.out.println("ERRO: "+ e.getMessage());
        }
        JOptionPane.showMessageDialog(null,"Atendimento cadastrado com sucesso!");
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        calcular();
    }//GEN-LAST:event_btnCalcularActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCadastrarAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCadastrarAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCadastrarAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCadastrarAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCadastrarAtendimento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnCalcular;
    private javax.swing.JToggleButton btnSalvar;
    private javax.swing.JComboBox<String> cbxCategoria;
    private javax.swing.JComboBox<String> cbxCliente;
    private javax.swing.JCheckBox chkBanho;
    private javax.swing.JCheckBox chkBrinquedos;
    private javax.swing.JCheckBox chkMedicacao;
    private javax.swing.JCheckBox chkTosa;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblDataAtendimento;
    private javax.swing.JLabel lblSelCliente;
    private javax.swing.JLabel lblServicos;
    private javax.swing.JLabel lblVlrTotal;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtVlrTotal;
    // End of variables declaration//GEN-END:variables
    
    void preencherComboCategoria(){
        String categoria[] = new String[]{"Canídeos","Felinos","Aves"};
        DefaultComboBoxModel modelo = new DefaultComboBoxModel(categoria);
        cbxCategoria.setModel(modelo);
        
        //definir a categoria vazia como selecionada:
        cbxCategoria.setSelectedIndex(0);
        
    } 
    
    void calcular(){
        total = 0;
        if(cbxCategoria.getSelectedItem() == "Canídeos"){
            total += 70;
        }
        if(cbxCategoria.getSelectedItem() == "Felinos"){
            total += 70;
        }
        if(cbxCategoria.getSelectedItem() == "Aves"){
            total += 90;
        }
            
        total += chkTosa.isSelected()?50 : 0;
        total += chkBanho.isSelected()?100 : 0;
        total += chkMedicacao.isSelected()?120 : 0;
        total += chkBrinquedos.isSelected()?30 : 0;
            
        txtVlrTotal.setText(String.format("%s",total));
    }
    
    void preencherComboCliente(){
        int i = clientes.size()-1;
        String vetor[] = new String[i+1];
        for (Cliente cli : clientes) {
            vetor[i] = (cli.getNome());
            i--;
        }
        DefaultComboBoxModel lst = new DefaultComboBoxModel(vetor);
        cbxCliente.setModel(lst);
        
    }
    public void configurarAtendimento(){
        
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        //posicionamento do formulario
        this.setLocationRelativeTo(null);
        //redimensionamento
        this.setResizable(false);
        Date data = new Date();
        txtData.setText(java.text.DateFormat.getDateInstance(DateFormat.MEDIUM).format(data));
    }

}
